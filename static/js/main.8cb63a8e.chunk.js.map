{"version":3,"sources":["Components/CheckBox.jsx","Components/table/TableBodyItem.jsx","Components/table/TableRowActions.js","Components/table/TableRow.jsx","Components/table/TableBody.jsx","Components/table/TableHeader.jsx","Components/table/Table.jsx","Components/Pagination.jsx","Components/SearchBox.jsx","Js/api-mediator.js","Components/table/InteractiveTable.js","Js/utils.js","pages/HomePage.jsx","App.js","reportWebVitals.js","index.js"],"names":["CheckBox","onChange","isChecked","type","checked","TableBodyItem","value","disabled","style","borderWidth","e","TableRowActions","editMode","onClickEdit","onClickSubmit","onClickDelete","onClickCancel","onClick","className","TableRow","item","actions","onSelectRow","useState","name","setName","email","setEmail","role","setRole","backgroundColor","target","canEdit","id","TableBody","data","rowActions","map","i","TableHeader","isSelectAll","onToggleSelectAll","headerItems","Table","headerData","bodyData","Pagination","state","this","props","itemsCount","pageSize","currentPage","onPageChange","onPrevPageChange","onNextPageChange","onGoToPage","pagesCount","Math","ceil","pages","push","float","page","cursor","Component","SearchBox","searchText","width","currentTarget","placeholder","getUserDetailsDetails","a","Axios","get","UserDetails","InteractiveTable","users","setUsers","filteredUsers","setFilteredUsers","paginatedUsers","setPaginatedUsers","setCurrentPage","setSearchText","setIsSelectAll","fetchUserDetails","api","forEach","user","useEffect","text","filteredUsersList","length","filter","toLowerCase","includes","getFilteredUsers","items","pageNumber","indexOfLastPage","indexOfFirstPage","slice","paginate","handleOnToggleSelectAll","usersList","findIndex","paginatedUser","index","splice","notDeletedUsers","pageNo","HomePage","params","Fragment","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8cb63a8e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst CheckBox = ({ onChange, isChecked }) => (\r\n  <div>\r\n    <input\r\n      type={\"checkBox\"}\r\n      onChange={onChange}\r\n      //   defaultChecked={isChecked}\r\n      checked={isChecked}\r\n    />\r\n  </div>\r\n);\r\n\r\nexport default CheckBox;\r\n","import React from 'react';\r\n\r\nconst TableBodyItem = ({\r\n  onChange, value, disabled\r\n}) => {\r\n  const handleOnChange = (e) => {\r\n    onChange(e);\r\n  };\r\n\r\n  return (\r\n    <td>\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        style={{ borderWidth: disabled ? 0 : 1 }}\r\n        onChange={handleOnChange}\r\n        disabled={disabled}\r\n      />\r\n    </td>\r\n  );\r\n};\r\nexport default TableBodyItem;\r\n","import React from 'react';\r\n\r\nconst TableRowActions = ({\r\n  editMode, \r\n  onClickEdit, \r\n  onClickSubmit, \r\n  onClickDelete, \r\n  onClickCancel,\r\n}) => {\r\n\r\n  return (\r\n    <td>\r\n      {editMode &&\r\n        <button\r\n          onClick={onClickSubmit}\r\n          className=\"btn btn-success mr-2\"\r\n        >\r\n          <i className=\"fa fa-check\"></i>\r\n        </button>\r\n      }\r\n      {editMode &&\r\n        <button\r\n          onClick={onClickCancel}\r\n          className=\"btn btn-danger mr-2\"\r\n        >\r\n          <i className=\"fa fa-close\"></i>\r\n        </button>\r\n      }\r\n      {!editMode &&\r\n        <button\r\n          onClick={onClickEdit}\r\n          className=\"btn btn-warning mr-2\"\r\n        >\r\n          <i className=\"fa fa-edit\"></i>\r\n        </button>\r\n      }\r\n      <button\r\n        onClick={onClickDelete}\r\n        className=\"btn btn-danger\"\r\n      >\r\n        <i className=\"fa fa-trash\"></i>\r\n      </button>\r\n    </td >\r\n  );\r\n};\r\nexport default TableRowActions;\r\n","import React, { useState } from 'react';\r\nimport CheckBox from '../CheckBox';\r\nimport TableBodyItem from './TableBodyItem';\r\nimport TableRowActions from './TableRowActions';\r\n\r\nconst TableRow = ({\r\n  item,\r\n  onChange,\r\n  actions: {\r\n    onClickEdit,\r\n    onClickSubmit,\r\n    onClickDelete,\r\n    onClickCancel,\r\n    onSelectRow,\r\n  },\r\n}) => {\r\n  const [name, setName] = useState(item.name);\r\n  const [email, setEmail] = useState(item.email);\r\n  const [role, setRole] = useState(item.role);\r\n\r\n  const handleOnSelectRow = (e) => {\r\n    onSelectRow({ ...item, isChecked: !item.isChecked });\r\n  };\r\n\r\n  const handleOnChangeName = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n  const handleOnChangeEmail = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n  const handleOnChangeRole = (e) => {\r\n    setRole(e.target.value);\r\n  };\r\n\r\n\r\n  const handleOnClickEdit = () => {\r\n    onClickEdit({ ...item, canEdit: !item.canEdit });\r\n  };\r\n\r\n  const handleOnClickSubmit = () => {\r\n    onClickSubmit({ ...item, name, email, role, canEdit: false });\r\n  };\r\n\r\n  const handleOnClickCancel = () => {\r\n    onClickCancel({ ...item, canEdit: false });\r\n    setName(item.name);\r\n    setEmail(item.email);\r\n    setRole(item.role);\r\n  };\r\n\r\n  const handleOnClickDelete = () => {\r\n    onClickDelete({ ...item });\r\n  };\r\n\r\n  return (\r\n    <tr\r\n      key={item.id}\r\n      style={{ backgroundColor: item.isChecked ? \"#ece5e5\" : null }}\r\n    >\r\n      <td>\r\n        <CheckBox\r\n          onChange={handleOnSelectRow}\r\n          isChecked={item.isChecked}\r\n        />\r\n      </td>\r\n      <TableBodyItem\r\n        value={name}\r\n        onChange={handleOnChangeName}\r\n        disabled={!item.canEdit}\r\n      />\r\n      <TableBodyItem\r\n        value={email}\r\n        onChange={handleOnChangeEmail}\r\n        disabled={!item.canEdit}\r\n      />\r\n      <TableBodyItem\r\n        value={role}\r\n        onChange={handleOnChangeRole}\r\n        disabled={!item.canEdit}\r\n      />\r\n      <TableRowActions\r\n        editMode={item.canEdit}\r\n        onClickEdit={handleOnClickEdit}\r\n        onClickSubmit={handleOnClickSubmit}\r\n        onClickDelete={handleOnClickDelete}\r\n        onClickCancel={handleOnClickCancel}\r\n      />\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default TableRow;","import React from \"react\";\r\nimport TableRow from \"./TableRow\";\r\n\r\nconst TableBody = ({ data = [], rowActions }) => {\r\n  return (\r\n    <tbody>\r\n      {data.map((item, i) => (\r\n        <TableRow key={item.id} item={item} actions={rowActions} />\r\n      ))}\r\n    </tbody>\r\n  );\r\n};\r\n\r\nexport default TableBody;\r\n","import React from \"react\";\r\nimport CheckBox from \"../CheckBox\";\r\n\r\nconst TableHeader = ({ isSelectAll, onToggleSelectAll, data = [] }) => {\r\n  const headerItems = data.map((item) => <th key={item}>{item}</th>);\r\n\r\n  const handleOnToggleSelectAll = () => {\r\n    onToggleSelectAll(!isSelectAll);\r\n  };\r\n\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        <th>\r\n          <CheckBox\r\n            onChange={handleOnToggleSelectAll}\r\n            isChecked={isSelectAll}\r\n          />\r\n        </th>\r\n        {headerItems}\r\n      </tr>\r\n    </thead>\r\n  );\r\n};\r\n\r\nexport default TableHeader;\r\n","import React from 'react';\r\nimport TableBody from './TableBody';\r\nimport TableHeader from './TableHeader';\r\n\r\n\r\nconst Table = ({\r\n  headerData, bodyData, rowActions, onToggleSelectAll, isSelectAll\r\n}) => {\r\n\r\n  return (\r\n    <table className=\"table-bordered table\">\r\n      <TableHeader\r\n        data={headerData}\r\n        onToggleSelectAll={onToggleSelectAll}\r\n        isSelectAll={isSelectAll}\r\n      />\r\n      <TableBody\r\n        data={bodyData}\r\n        rowActions={rowActions}\r\n      />\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { Component } from 'react';\r\n\r\nclass Pagination extends Component {\r\n  state = {}\r\n  render() {\r\n    const { itemsCount, pageSize, currentPage, onPageChange, onPrevPageChange, onNextPageChange, onGoToPage } = this.props;\r\n    const pagesCount = Math.ceil(itemsCount / pageSize);\r\n    if (pagesCount === 1) return null;\r\n    const pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n      pages.push(i);\r\n    }\r\n    return (\r\n      <nav style={{ float: 'right' }}>\r\n        <ul className=\"pagination\">\r\n          <li className=\"page-item\">\r\n            <a className=\"page-link\" onClick={() => onGoToPage(1)}>First</a>\r\n          </li>\r\n          <li className=\"page-item\">\r\n            <a className=\"page-link\" onClick={onPrevPageChange} >Previous</a>\r\n          </li>\r\n          {pages.map(page => (\r\n            <li className={page === currentPage ? \"page-item active\" : \"page-item\"} key={page}>\r\n              <a className=\"page-link\" style={{ cursor: 'pointer' }} onClick={() => onPageChange(page)}>{page}</a>\r\n            </li>\r\n          ))}\r\n          <li className=\"page-item\">\r\n            <a className=\"page-link\" onClick={onNextPageChange}>Next</a>\r\n          </li>\r\n          <li className=\"page-item\">\r\n            <a className=\"page-link\" onClick={() => onGoToPage(pagesCount)}>Last</a>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pagination;","import React, { Component } from 'react';\r\n\r\nconst SearchBox = ({ searchText, onChange }) => {\r\n  const handleOnChange = (e) => {\r\n    onChange(e.currentTarget.value);\r\n  }\r\n  return (\r\n    <div className='searchBox'>\r\n      <input\r\n        value={searchText}\r\n        type={'text'}\r\n        className='form-control'\r\n        width=\"50px\"\r\n        onChange={handleOnChange}\r\n        placeholder={'Search by name, role or email'} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;","import Axios from \"axios\";\r\nconst baseURL = 'https://geektrust.s3-ap-southeast-1.amazonaws.com/adminui-problem/members.json';\r\n\r\n  export const getUserDetailsDetails = async() => {\r\n    const {data: UserDetails} = await Axios.get(baseURL);\r\n    return UserDetails;\r\n  }","import React, { useEffect, useState } from \"react\";\r\nimport Table from \"./Table\";\r\nimport Pagination from \"../Pagination\";\r\nimport SearchBox from \"../SearchBox\";\r\nimport * as api from \"../../Js/api-mediator\";\r\nimport { paginate } from \"../../Js/utils\";\r\n\r\nconst headerData = [\"Name\", \"Email\", \"Role\", \"Actions\"];\r\n\r\nconst InteractiveTable = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [filteredUsers, setFilteredUsers] = useState(users);\r\n  const [paginatedUsers, setPaginatedUsers] = useState(filteredUsers);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [pageSize, setPageSize] = useState(10);\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [isSelectAll, setIsSelectAll] = useState(false);\r\n\r\n  const fetchUserDetails = async () => {\r\n    let users = await api.getUserDetailsDetails();\r\n    users.forEach((user) => {\r\n      user.isChecked = false;\r\n      user.canEdit = false;\r\n    });\r\n    setUsers(users);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchUserDetails();\r\n  }, []);\r\n\r\n  const getFilteredUsers = (text) => {\r\n    let filteredUsersList = [...users];\r\n    if (text.length) {\r\n      filteredUsersList = filteredUsersList.filter((user) => {\r\n        if (user.name.toLowerCase().includes(text.toLowerCase())) {\r\n          return true;\r\n        } else if (user.role.toLowerCase().includes(text.toLowerCase())) {\r\n          return true;\r\n        } else if (user.email.toLowerCase().includes(text.toLowerCase())) {\r\n          return true;\r\n        }\r\n        return false;\r\n      });\r\n    }\r\n    return filteredUsersList;\r\n  };\r\n\r\n  useEffect(() => {\r\n    setFilteredUsers(getFilteredUsers(searchText));\r\n  }, [users, searchText]);\r\n\r\n  useEffect(() => {\r\n    setPaginatedUsers(paginate(filteredUsers, pageSize, currentPage));\r\n  }, [filteredUsers, pageSize, currentPage]);\r\n\r\n  const handleOnChangeSearchText = (text) => {\r\n    setSearchText(text);\r\n    setCurrentPage(1);\r\n    if (isSelectAll) {\r\n      handleOnToggleSelectAll(false);\r\n      setIsSelectAll(false);\r\n    }\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (Math.ceil(filteredUsers.length / pageSize) !== currentPage) {\r\n      setCurrentPage(currentPage + 1);\r\n    }\r\n  };\r\n\r\n  const handlePrev = () => {\r\n    if (currentPage > 1) {\r\n      setCurrentPage(currentPage - 1);\r\n    }\r\n  };\r\n\r\n  const handleGoToPage = (pageNo) => {\r\n    setCurrentPage(pageNo);\r\n  };\r\n\r\n  const handlePageChange = (pageNo) => {\r\n    setCurrentPage(pageNo);\r\n  };\r\n\r\n  const handleDeleteSelected = () => {\r\n    const notDeletedUsers = users.filter((user) => !user.isChecked);\r\n    setUsers(notDeletedUsers);\r\n    setIsSelectAll(false);\r\n  };\r\n\r\n  const handleOnClickEdit = (item) => {\r\n    const usersList = [...users];\r\n    const index = usersList.findIndex((user) => user.id === item.id);\r\n    if (index !== -1) {\r\n      usersList.splice(index, 1, item);\r\n    }\r\n    setUsers(usersList);\r\n  };\r\n\r\n  const handleOnSelectRow = (item) => {\r\n    const usersList = [...users];\r\n    const index = usersList.findIndex((user) => user.id === item.id);\r\n    if (index !== -1) {\r\n      usersList.splice(index, 1, item);\r\n    }\r\n    setUsers(usersList);\r\n  };\r\n\r\n  const handleOnClickSubmit = (item) => {\r\n    const usersList = [...users];\r\n    const index = usersList.findIndex((user) => user.id === item.id);\r\n    if (index !== -1) {\r\n      usersList.splice(index, 1, item);\r\n    }\r\n    setUsers(usersList);\r\n  };\r\n\r\n  const handleOnClickCancel = (item) => {\r\n    const usersList = [...users];\r\n    const index = usersList.findIndex((user) => user.id === item.id);\r\n    if (index !== -1) {\r\n      usersList.splice(index, 1, item);\r\n    }\r\n    setUsers(usersList);\r\n  };\r\n\r\n  const handleOnClickDelete = (item) => {\r\n    const usersList = [...users];\r\n    const index = usersList.findIndex((user) => user.id === item.id);\r\n    if (index !== -1) {\r\n      usersList.splice(index, 1);\r\n    }\r\n    setUsers(usersList);\r\n  };\r\n\r\n  const handleOnToggleSelectAll = (isSelectAll) => {\r\n    const usersList = users.map((user) => {\r\n      if (isSelectAll) {\r\n        const index = paginatedUsers.findIndex(\r\n          (paginatedUser) => user.id === paginatedUser.id\r\n        );\r\n        if (index !== -1) {\r\n          return {\r\n            ...user,\r\n            isChecked: true,\r\n          };\r\n        }\r\n      } else if (!isSelectAll && user.isChecked) {\r\n        return {\r\n          ...user,\r\n          isChecked: false,\r\n        };\r\n      }\r\n      return user;\r\n    });\r\n    setUsers(usersList);\r\n    setIsSelectAll(isSelectAll);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <SearchBox value={searchText} onChange={handleOnChangeSearchText} />\r\n      <Table\r\n        headerData={headerData}\r\n        bodyData={paginatedUsers}\r\n        rowActions={{\r\n          onSelectRow: handleOnSelectRow,\r\n          onClickEdit: handleOnClickEdit,\r\n          onClickDelete: handleOnClickDelete,\r\n          onClickSubmit: handleOnClickSubmit,\r\n          onClickCancel: handleOnClickCancel,\r\n        }}\r\n        onToggleSelectAll={handleOnToggleSelectAll}\r\n        isSelectAll={isSelectAll}\r\n      />\r\n      <button className=\"btn btn-danger\" onClick={handleDeleteSelected}>\r\n        Delete selected\r\n      </button>\r\n      <Pagination\r\n        itemsCount={filteredUsers.length}\r\n        currentPage={currentPage}\r\n        pageSize={pageSize}\r\n        onPageChange={handlePageChange}\r\n        onNextPageChange={handleNext}\r\n        onPrevPageChange={handlePrev}\r\n        onGoToPage={handleGoToPage}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InteractiveTable;\r\n","export const paginate = (items, pageSize, pageNumber) => {\r\n  const indexOfLastPage = pageNumber * pageSize;\r\n  const indexOfFirstPage = indexOfLastPage - pageSize;\r\n  return items.slice(indexOfFirstPage, indexOfLastPage);\r\n}","import React from 'react';\r\nimport { InteractiveTable } from '../Components/table/index';\r\n\r\nconst HomePage = ({\r\n  params,\r\n}) => {\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"col-12\">\r\n        <h2>Admin UI</h2>\r\n      </div>\r\n      <InteractiveTable />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import React, { Component } from \"react\";\nimport \"./css/table.css\";\nimport HomePage from \"./pages/HomePage\";\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <HomePage />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"../node_modules/font-awesome/css/font-awesome.css\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}